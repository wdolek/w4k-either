<Project Sdk="Microsoft.NET.Sdk">

  <ItemGroup>
    <None Include="Either.CodeGeneration.props" Pack="true" PackagePath="build" />
  </ItemGroup>

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net8.0</TargetFrameworks>
    <NoWarn>NU5128,RS2007</NoWarn>
    <EnablePackageValidation>true</EnablePackageValidation>
    <RootNamespace>Either</RootNamespace>
  </PropertyGroup>

  <PropertyGroup>
    <VersionPrefix>2.0.0</VersionPrefix>
    <Authors>Zdenek Havlin</Authors>
    <Description>A source generator for creating discriminated union-like value types in C#. This tool simplifies the creation of Either types, enabling developers to define custom types with ease and ensuring type safety in functional programming patterns.</Description>
    <PackageId>Either.CodeGeneration</PackageId>
    <PackageTags>C#, Source Generator, Code Generation, Functional Programming, Either, Discriminated Union, Maybe, Result, Optional, Monad, Roslyn</PackageTags>
    <PackageProjectUrl>https://github.com/wdolek/w4k-either</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIconUrl>https://github.com/wdolek/w4k-either/blob/main/images/either_128px.png?raw=true</PackageIconUrl>
    <PackageIcon>_img/either_128px.png</PackageIcon>
    <RepositoryUrl>https://github.com/wdolek/w4k-either.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <PropertyGroup>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <IsRoslynComponent>true</IsRoslynComponent>
    <AppendTargetFrameworkToOutputPath>true</AppendTargetFrameworkToOutputPath>
  </PropertyGroup>

  <PropertyGroup>
    <SuppressTfmSupportBuildWarnings>true</SuppressTfmSupportBuildWarnings>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.11.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.11.0" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Either.Shared\Either.Shared.csproj" PrivateAssets="All" OutputItemType="Analyzer" />
  </ItemGroup>

  <ItemGroup>
    <!-- Analyzer -->
    <None Include="$(OutputPath)\netstandard2.0\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(OutputPath)\netstandard2.0\$(AssemblyName).pdb" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(OutputPath)\netstandard2.0\$(AssemblyName).xml" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(OutputPath)\netstandard2.0\Either.Shared.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(OutputPath)\netstandard2.0\Either.Shared.pdb" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(OutputPath)\netstandard2.0\Either.Shared.xml" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />

    <!-- Library -->
    <!-- intentionally not including any `netstandard2.0` assemblies, `EnsureNet80OrHigher` target won't allow anything below net8.0+ anyway -->
    <None Include="$(OutputPath)\net8.0\Either.Shared.dll" Pack="true" PackagePath="lib\net8.0" Visible="true" />
    <None Include="$(OutputPath)\net8.0\Either.Shared.pdb" Pack="true" PackagePath="lib\net8.0" Visible="true" />
    <None Include="$(OutputPath)\net8.0\Either.Shared.xml" Pack="true" PackagePath="lib\net8.0" Visible="true" />
  </ItemGroup>

  <ItemGroup>
    <None Include="README.md" Pack="true" PackagePath="\" />
    <None Include="..\..\images\either_128px.png" Pack="true" PackagePath="_img" />
  </ItemGroup>

</Project>
